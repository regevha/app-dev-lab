kind: Deployment
apiVersion: apps/v1
metadata:
# set your lab user name
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.ReplicaNumber }}
  selector:
    matchLabels:
# set your lab user name
      app: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/ConfigMap.yaml") . | sha256sum }} 
      labels:
# set your lab user name
        app: {{ .Release.Name }}

    spec:
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Release.Name }}
          ports:
            - containerPort: {{ .Values.containers.containerPort }}
              protocol: TCP

          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.containers.containerPort  }} # In which port the Application is listening
              scheme: HTTP
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds  }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds  }}
            successThreshold: {{ .Values.probes.readiness.successThreshold  }} 
            failureThreshold: {{ .Values.probes.readiness.failureThreshold  }} 

          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.containers.containerPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds  }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds  }}
            successThreshold: {{ .Values.probes.liveness.successThreshold  }} 
            failureThreshold: {{ .Values.probes.liveness.failureThreshold  }} 

          volumeMounts:
            - name: index-html
              mountPath: /tmp/html # this will mount the html.index file to it application location


          env:
            - name: PORT
              value: {{ .Values.containers.containerPort | quote }}

          imagePullPolicy: IfNotPresent
# update with the image you build in part 1
          image: {{ .Values.containers.image }}:{{ .Values.containers.tag }}
      volumes:
      - name: index-html
        configMap:
          name: index.html
          defaultMode: 420
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10